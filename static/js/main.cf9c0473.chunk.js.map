{"version":3,"sources":["CustomModal.js","CustomParticles.js","PersonalProjects.js","images/jasmine.jpg","Content.js","constants.js","CustomToggle.js","App.js","reportWebVitals.js","index.js"],"names":["CustomModal","props","useState","show","setShow","clickedOutside","useRef","useEffect","handleClick","e","current","contains","target","handleClose","document","addEventListener","removeEventListener","ref","className","onClick","data","title","style","display","width","cursor","fontSize","component","overflowY","maxHeight","lineHeight","content","CustomParticles","id","options","fpsLimit","fullScreen","enable","interactivity","detectsOn","events","onHover","mode","resize","modes","bubble","distance","duration","opacity","size","particles","color","value","collisions","move","direction","outMode","random","speed","straight","number","density","value_area","shape","type","detectRetina","PersonalProjects","PERSONAL_PROJECT_TABS","alphaGoAway","AIPHA_GO_AWAY","pandemicPal","PANDEMIC_PAL","tcpServer","TCP_SERVER","tapestry","TAPESTRY","Object","keys","currTab","setCurrTab","height","map","tabKey","tab","href","handleSelected","ABOUT_ME","src","jasmine","PERSONAL_PROJECTS","textDecoration","THIS_SITE","THEME_ID","THEMES","CustomToggle","enabled","setEnabled","text","setText","enabledTemp","enableText","disableText","toggle","App","theme","lightMode","setLightMode","getElementById","setAttribute","process","localStorage","setItem","updateTheme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","link","createElement","head","appendChild","savedTheme","getItem","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cf9c0473.chunk.js","sourcesContent":["import React, {useState, useRef, useEffect} from \"react\";\r\nimport \"./stylesheets/Modal.css\"\r\n\r\n\r\nfunction CustomModal(props) {\r\n    const [show, setShow] = useState(false)\r\n\r\n    const clickedOutside = useRef()\r\n\r\n    useEffect(() => {\r\n        // add when mounted\r\n        const handleClick = e => {\r\n            if (clickedOutside.current.contains(e.target)) {\r\n                return;\r\n            }\r\n            handleClose()\r\n        };\r\n        document.addEventListener(\"mousedown\", handleClick);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClick);\r\n        };\r\n    }, []);\r\n\r\n    const handleClose = () => {\r\n        setShow(false)\r\n    }\r\n    const handleShow = () => {\r\n        setShow(true)\r\n    }\r\n\r\n    return (\r\n        <div ref={clickedOutside}>\r\n            <button className={\"modal-button\"} onClick={handleShow}> {props.data.title} </button>\r\n            <div className={'custom-modal ' + (show? \"show-modal\" : \"hide-modal\")}>\r\n                <div>\r\n                    <h2 style={{display: \"inline-block\", width: \"98%\"}}> {props.data.title} </h2>\r\n                    <div style={{display: \"inline-block\", width: \"2%\", cursor: \"pointer\", fontSize: \"1.5em\"}}\r\n                         onClick={handleClose} className={\"close-button\"}> âœ•\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n\r\n                {props.data.component && props.data.component}\r\n                <br/>\r\n                <div style={{overflowY: \"auto\", maxHeight: \"75%\", lineHeight: \"1.75em\"}}>\r\n                    {props.data.content}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomModal;\r\n","import Particles from \"react-tsparticles\";\r\n\r\nfunction CustomParticles() {\r\n    return (\r\n        <Particles\r\n            id=\"tsparticles\"\r\n            options={{\r\n                fpsLimit: 30,\r\n                fullScreen: {\r\n                    enable: true\r\n                },\r\n                interactivity: {\r\n                    detectsOn: \"canvas\",\r\n                    events: {\r\n                        onHover: {\r\n                            enable: true,\r\n                            mode: \"bubble\",\r\n                        },\r\n                        resize: true,\r\n                    },\r\n                    modes: {\r\n                        bubble: {\r\n                            distance: 200,\r\n                            duration: 2,\r\n                            opacity: 0.6,\r\n                            size: 15,\r\n                        },\r\n                    },\r\n                },\r\n                particles: {\r\n                    color: {\r\n                        value: \"#ffffff\",\r\n                    },\r\n                    collisions: {\r\n                        enable: true,\r\n                    },\r\n                    move: {\r\n                        direction: \"none\",\r\n                        enable: true,\r\n                        outMode: \"bounce\",\r\n                        random: false,\r\n                        speed: 2,\r\n                        straight: false,\r\n                    },\r\n                    number: {\r\n                        density: {\r\n                            enable: true,\r\n                            value_area: 800,\r\n                        },\r\n                        value: 15,\r\n                    },\r\n                    opacity: {\r\n                        value: 0.9,\r\n                    },\r\n                    shape: {\r\n                        type: \"star\",\r\n                    },\r\n                    size: {\r\n                        random: true,\r\n                        value: 7,\r\n                    },\r\n                },\r\n                detectRetina: true,\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default CustomParticles\r\n","import React, {useState, useRef, useEffect} from \"react\";\r\nimport {AIPHA_GO_AWAY, PANDEMIC_PAL, TCP_SERVER, TAPESTRY} from \"./Content\"\r\n\r\nfunction PersonalProjects() {\r\n    const PERSONAL_PROJECT_TABS = {\r\n        alphaGoAway: {\r\n            title: \"AIpha Go Away\",\r\n            content: AIPHA_GO_AWAY\r\n        },\r\n        pandemicPal: {\r\n            title: \"Pandemic Pal\",\r\n            content: PANDEMIC_PAL\r\n        },\r\n        tcpServer: {\r\n            title: \"Linux TCP Server\",\r\n            content: TCP_SERVER\r\n        },\r\n        tapestry: {\r\n            title: \"Tapestry\",\r\n            content: TAPESTRY\r\n        }\r\n    }\r\n\r\n    const [currTab, setCurrTab] = useState(Object.keys(PERSONAL_PROJECT_TABS)[0])\r\n\r\n    function handleSelected(tabKey) {\r\n        setCurrTab(tabKey)\r\n    }\r\n\r\n    return (\r\n        <div style={{height: \"75%\"}}>\r\n            <div className={\"tab-container\"} style={{maxHeight: \"25%\", overflowY: \"auto\"}}>\r\n                {Object.keys(PERSONAL_PROJECT_TABS).map(tabKey => {\r\n                        let tab = PERSONAL_PROJECT_TABS[tabKey]\r\n                        return (\r\n                            <a\r\n                                href={\"#\"}\r\n                                className={\"tab \" + (currTab === tabKey ? \"active-tab\" : \"\")}\r\n                                key={tabKey}\r\n                                onClick={() => {\r\n                                    handleSelected(tabKey)\r\n                                }}\r\n                            >\r\n                                {tab.title}\r\n                            </a>\r\n                        )\r\n                    }\r\n                )}\r\n            </div>\r\n            <br/>\r\n            <div style={{height: \"75%\", overflowY: \"auto\"}}>\r\n                {PERSONAL_PROJECT_TABS[currTab].content}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonalProjects;","export default __webpack_public_path__ + \"static/media/jasmine.35a881fa.jpg\";","import PersonalProjects from \"./PersonalProjects\";\r\nimport jasmine from './images/jasmine.jpg'\r\n\r\nexport const ABOUT_ME = {\r\n    title: \"About Me\",\r\n    content:\r\n        <div>\r\n            <div>\r\n                <img className={\"pfp\"} src={jasmine}/>\r\n            </div>\r\n            <div>\r\n                Hi there! As you may know, my name is Jasmine and I'm a 4th year computer science student at the\r\n                University\r\n                of\r\n                British Columbia.\r\n                <br/>\r\n                <br/>\r\n                I am passionate about technology, and its ability to span multiple disciplines, especially the field\r\n                of education. I think that technology can play a large role in providing accessible, effective education\r\n                in\r\n                the coming\r\n                years (and it already has). As you may have guessed, education is another passion of mine.\r\n                <br/>\r\n                <br/>\r\n                In my free time, I enjoy creating digital art (like the background on this website), baking, and\r\n                running. Oh\r\n                yea, and creating\r\n                personal websites.\r\n            </div>\r\n        </div>,\r\n    component: null\r\n}\r\n\r\nexport const PERSONAL_PROJECTS = {\r\n    title: \"Personal Projects\",\r\n    content: \"\",\r\n    component: <PersonalProjects/>\r\n}\r\n\r\nexport const AIPHA_GO_AWAY =\r\n    <div>\r\n        <h4> Overview </h4>\r\n        AIpha Go Away was a 4 month project in which I worked with a team of 5 other students to create a basic 2D game\r\n        in C++. We used OpenGL for rendering, as well as employed an Entity Component System design pattern. AIpha\r\n        Go Away (a play on 'Alpha Go') is a 2-player auto-battle game revolving around humans vs AI, designed to be\r\n        able to be played on Zoom via remote control of a user's device.\r\n        <h4> Accomplishments </h4>\r\n        Having been my first exposure to game development, creating this game was equal parts challenging and\r\n        fulfilling.\r\n        My personal contributions most notably include developing the path-finding, implementing keyframe animations\r\n        (with state interpolation), and adding in a parallax scrolling background.\r\n    </div>\r\n\r\nexport const PANDEMIC_PAL =\r\n    <div>\r\n        <h4> Overview </h4>\r\n        Pandemic Pal was developed as a web application using ReactJS, Java Springboot, and mySQL. The goal of the\r\n        application was to\r\n        aid transitioning to remote working, during the pandemic. The application was a 4 month project, with 5 other\r\n        students.\r\n        There were 3 modules of the application: a booking module to allow admins to add locations and employees to book\r\n        those\r\n        locations as their work locations, a social module allowing admins to create topics and for users to add posts\r\n        and comments,\r\n        and a mail module allowing admins to assign physical mail parcels to users, and for users to request assistance.\r\n        <h4> Accomplishments </h4>\r\n        For this project, I assumed the position of Project Manager - I felt I was fit for this role due to my previous\r\n        experience\r\n        in developing web applications, and also because I wanted to challenge myself. I worked largely on the frontend\r\n        of the application\r\n        and was involved in creating almost every reactive component. I consistently performed code reviews and testing\r\n        for both the frontend and backend. However, my greatest accomplishment in this role was learning how to\r\n        integrate Azure Active Directory into our application,\r\n        and using it to acquire ID and Access Tokens, that were then used to secure the application\r\n    </div>\r\n\r\nexport const TCP_SERVER =\r\n    <div>\r\n        <h4> Overview </h4>\r\n        I created a Linux TCP server/host program using C, that allowed users to listen and connect to specific hosts,\r\n        on specified ports.\r\n        It consisted of 2 non-blocking servers - one implemented with threads, and another with polling. It allowed for\r\n        upto 5 simultaneous\r\n        connections on a given server, and could act as a chat server, relaying messages from one client to another.\r\n        <h4> Accomplishments </h4>\r\n        This application was inspired by netcat and was meant to be a simplified version of the server. It was a\r\n        challenging project\r\n        and my first time creating a server. Overall it was a rewarding experience and I gained useful knowledge of C's\r\n        networking APIs.\r\n        <br/><br/>\r\n    </div>\r\n\r\nexport const TAPESTRY =\r\n    <div>\r\n        <h4> Overview </h4>\r\n        Tapestry is an educational tool developed by UBC's Psychology Department. I was lucky to volunteer with them and\r\n        help develop\r\n        an educational WordPress plugin using Vue.js and PHP. The plugin approached education in a non-linear fashion\r\n        to help students make connections between topics via a graph-based interface. You can read more\r\n        about it <a style={{textDecoration: \"underline\"}} href={\"https://tapestry-tool.com/\"}\r\n                    target={\"_blank\"}> here</a>.\r\n        <h4> Accomplishments </h4>\r\n        While working in a team of 3 other software developers, I gained experience in using Vue.js and PHP for the\r\n        first time, as well as\r\n        was inspired by those around me. It was a great experience with lots of learning opportunities. However, most\r\n        memorably, I\r\n        was humbled by the many amazing student developers there. This was my first time working with a team in a\r\n        professional environment, and I\r\n        gained insight into collaborative coding within a structured environment, with strict guidelines for coding\r\n        practices, processes,\r\n        etc. It was a fun and unique experience!\r\n        <br/><br/>\r\n    </div>\r\n\r\nexport const THIS_SITE = {\r\n    title: \"This Site\",\r\n    content:\r\n        <div>\r\n            <h4> Overview </h4>\r\n            This site was built using ReactJS and custom CSS - with no bootstrap! The star particles were added\r\n            using the react-tsparticles library. All the artwork was drawn by hand and animations are done with\r\n            CSS. You can check out the code <a style={{textDecoration: \"underline\"}}\r\n                                               href={\"https://github.com/jaskwong/Personal_Site\"} target={\"_blank\"}>\r\n            here</a>. All in all, this website took me about 2 days. I'm proud of the design I created,\r\n            and hope you can enjoy it while you're here too! (Make sure to check out the dark theme :D)\r\n            <br/>\r\n            <br/>\r\n            <h4> Design Choices</h4>\r\n            So you might wonder why I didn't use bootstrap (because why reinvent the wheel). I wanted to gain a better\r\n            understanding of css and visual design. Using bootstrap would've seemed like a bit of a cop-out haha.\r\n            The custom artwork allowed me to combine 2 of my hobbies - art and technology - to create something\r\n            (hopefully) aesthetically pleasing yet functional.\r\n            <br/>\r\n            <br/>\r\n            Lastly, the star particles were purely self-indulgent and I thought it added a professional yet beautiful\r\n            touch\r\n            to the site.\r\n\r\n        </div>,\r\n    component: null\r\n}\r\n\r\n","export const THEME_ID = \"lightDarkTheme\"\r\nexport const THEMES = {\r\n    light: '/stylesheets/LightTheme.css',\r\n    dark: '/stylesheets/DarkTheme.css'\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport \"./stylesheets/Toggle.css\"\r\n\r\n\r\nfunction CustomToggle(props) {\r\n    const [enabled, setEnabled] = useState(false)\r\n    const [text, setText] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        let enabledTemp = props.enabled\r\n        setEnabled(enabledTemp)\r\n        if (enabledTemp && props.enableText) {\r\n            setText(props.enableText)\r\n        } else if (!enabledTemp && props.disableText) {\r\n            setText(props.disableText)\r\n        }\r\n    })\r\n\r\n    function handleToggle() {\r\n        setEnabled(!enabled)\r\n        if (props.toggle) props.toggle()\r\n    }\r\n\r\n    return (\r\n        <div className={\"toggle-container\"}>\r\n            <div className={\"toggle-text\"}> {text} </div>\r\n            <div className={\"toggle\"} onClick={handleToggle}>\r\n                <button className={\"toggle-btn \" + (enabled ? \"toggle-btn-enabled\" : \"\")} type=\"checkbox\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomToggle\r\n","import './stylesheets/Common.css'\nimport './stylesheets/Animations.css'\nimport CustomModal from \"./CustomModal\";\nimport CustomParticles from \"./CustomParticles\";\nimport {ABOUT_ME, PERSONAL_PROJECTS, THIS_SITE} from \"./Content\"\nimport React, {useState, useEffect} from 'react'\nimport {THEME_ID, THEMES} from \"./constants\";\nimport CustomToggle from \"./CustomToggle\";\n\nfunction App(props) {\n    const [lightMode, setLightMode] = useState((props.theme === \"light\" || !props.theme))\n\n    useEffect(() => {\n        updateTheme()\n    }, [lightMode]);\n\n    function handleThemeChange() {\n        setLightMode(!lightMode)\n    }\n\n    function updateTheme() {\n        if (lightMode) {\n            document.getElementById(THEME_ID).setAttribute(\"href\", process.env.PUBLIC_URL + THEMES.light)\n        } else {\n            document.getElementById(THEME_ID).setAttribute(\"href\", process.env.PUBLIC_URL + THEMES.dark)\n        }\n        localStorage.setItem(THEME_ID, (lightMode? \"light\" : \"dark\"))\n    }\n\n    return (\n        <div>\n            <CustomToggle toggle={handleThemeChange}\n                          enabled={lightMode} enableText={\"light\"}\n                          disableText={\"dark\"}/>\n            <CustomParticles/>\n            <div className={\"main-container\"}>\n                <h1 className={\"main-title\"}>Jasmine Kwong</h1>\n                <p>\n                    Hi my name's Jasmine and this is my website, I hope you like it :D\n                </p>\n                <div className={\"btn-container\"}>\n                    <CustomModal data={ABOUT_ME}/>\n                    <CustomModal data={PERSONAL_PROJECTS}/>\n                    <CustomModal data={THIS_SITE}/>\n                    <a href={\"https://github.com/jaskwong\"}\n                       target={\"_blank\"}>\n                        <button className={\"modal-button\"}>\n                            github\n                        </button>\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {THEME_ID, THEMES} from \"./constants\";\n\n// set up for dynamic theme change\nconst link = document.createElement('link');\nlink.setAttribute('rel', \"stylesheet\");\nlink.setAttribute('href', process.env.PUBLIC_URL + THEMES.light);\nlink.setAttribute('id', THEME_ID);\ndocument.head.appendChild(link);\n\n// get saved theme\nlet savedTheme = localStorage.getItem(THEME_ID)\n\nReactDOM.render(\n    <React.StrictMode>\n        <App theme={savedTheme}/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}